// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4692.BELL;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.VictorSP;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static DoubleSolenoid fingerDoubleSolenoid1;
    public static SpeedController driveSystemSpeedController1;
    public static SpeedController driveSystemSpeedController2;
    public static RobotDrive driveSystemRobotDrive21;
    public static DoubleSolenoid triggerDoubleSolenoid1;
    public static CANTalon shootCANTalon1;
    public static CANTalon shootCANTalon2;
    public static CANTalon shootCANTalon3;
    public static DoubleSolenoid shootAngleDoubleSolenoid1;
    public static Relay lightSpike1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        fingerDoubleSolenoid1 = new DoubleSolenoid(0, 2, 3);
        LiveWindow.addActuator("Finger", "Double Solenoid 1", fingerDoubleSolenoid1);
        
        driveSystemSpeedController1 = new VictorSP(0);
        LiveWindow.addActuator("DriveSystem", "Speed Controller 1", (VictorSP) driveSystemSpeedController1);
        
        driveSystemSpeedController2 = new VictorSP(1);
        LiveWindow.addActuator("DriveSystem", "Speed Controller 2", (VictorSP) driveSystemSpeedController2);
        
        driveSystemRobotDrive21 = new RobotDrive(driveSystemSpeedController1, driveSystemSpeedController2);
        
        driveSystemRobotDrive21.setSafetyEnabled(true);
        driveSystemRobotDrive21.setExpiration(0.1);
        driveSystemRobotDrive21.setSensitivity(0.5);
        driveSystemRobotDrive21.setMaxOutput(1.0);

        triggerDoubleSolenoid1 = new DoubleSolenoid(0, 4, 5);
        LiveWindow.addActuator("Trigger", "Double Solenoid 1", triggerDoubleSolenoid1);
        
        shootCANTalon1 = new CANTalon(6);
        LiveWindow.addActuator("Shoot", "CAN Talon 1", shootCANTalon1);
        
        shootCANTalon2 = new CANTalon(8);
        LiveWindow.addActuator("Shoot", "CAN Talon 2", shootCANTalon2);
        
        shootCANTalon3 = new CANTalon(7);
        LiveWindow.addActuator("Shoot", "CAN Talon 3", shootCANTalon3);
        
        shootAngleDoubleSolenoid1 = new DoubleSolenoid(0, 0, 1);
        LiveWindow.addActuator("ShootAngle", "Double Solenoid 1", shootAngleDoubleSolenoid1);
        
        lightSpike1 = new Relay(1);
        LiveWindow.addActuator("Light", "Spike 1", lightSpike1);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
